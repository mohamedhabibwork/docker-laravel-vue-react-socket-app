# For more information: https://laravel.com/docs/sail
version: '3'
services:
    laravel.test:
        build:
            context: ./docker/8.0
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.0/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-7000}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-on}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
            - databasepgsql
        depends_on:
            - pgsql
            - redis
            - mailhog
            - meilisearch
            - minio
            - selenium
            - pgadmin
    socket.test:
        image: node
        ports:
            - '${SOCKET_APP_PORT:-7001}:3000'
        command: [ "npm","run","start" ]
        environment:
            SOCKET_APP_HOST: '0.0.0.0'
            SOCKET_APP_PORT: '3000'
        working_dir: '/var/www/html/socket'
        volumes:
            - './socket:/var/www/html/socket'
        networks:
            - sail
    vue_app.test:
        image: node
        ports:
            - '${VUE_APP_PORT:-7002}:3002'
        environment:
            HOST: '0.0.0.0'
            PORT: '3002'
        command: [ "npm","run","serve" , "--", "--port", '3002' ]
        working_dir: '/var/www/html/vue_app'
        volumes:
            - './vue_app:/var/www/html/vue_app'
        networks:
            - sail
    react_app.test:
        image: node
        ports:
            - '${REACT_APP_PORT:-7003}:3003'
        environment:
            HOST: '0.0.0.0'
            PORT: '3003'
        command: [ "npm","run","start" , "--", "--port", '3003' ]
        working_dir: '/var/www/html/react_app'
        volumes:
            - './react_app:/var/www/html/react_app'
        networks:
            - sail
    angular_app.test:
        image: node
        ports:
            - '${ANGULAR_APP_PORT:-7004}:3004'
        environment:
            HOST: '0.0.0.0'
            PORT: '3004'
        command: npm run start -- --port=3004 --host=0.0.0.0 --disable-host-check
        working_dir: '/var/www/html/angular-app'
        volumes:
            - './angular-app:/var/www/html/angular-app'
        networks:
            - sail
    next_app.test:
        image: node
        ports:
            - '${NEXT_APP_PORT:-7005}:3005'
        environment:
            HOST: '0.0.0.0'
            PORT: '3005'
        command: [ "npm","run","dev" , "--", "--port", '3005' ]
        working_dir: '/var/www/html/next_app'
        volumes:
            - './next_app:/var/www/html/next_app'
        networks:
            - sail
    nuxt_app.test:
        image: node
        ports:
            - '${NUXT_APP_PORT:-7006}:3006'
        environment:
            HOST: '0.0.0.0'
            PORT: '3006'
        command: [ "npm","run","dev" , "--", "--port", '3006' ]
        working_dir: '/var/www/html/nuxt_app'
        volumes:
            - './nuxt_app:/var/www/html/nuxt_app'
        networks:
            - sail
    pgsql:
        build:
            context: docker/postgres
            dockerfile: Dockerfile
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sailpgsql:/var/lib/postgresql/data'
        networks:
            - sail
            - databasepgsql
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
            retries: 3
            timeout: 5s
    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        volumes:
            - 'sailmeilisearch:/data.ms'
        networks:
            - sail
        healthcheck:
            test: [ "CMD", "wget", "--no-verbose", "--spider",  "http://localhost:7700/health" ]
            retries: 3
            timeout: 5s
    memcached:
        image: 'memcached:alpine'
        ports:
            - '11211:11211'
        networks:
            - sail
    minio:
        image: 'minio/minio:latest'
        ports:
            - '${FORWARD_MINIO_PORT:-9000}:9000'
            - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
        environment:
            MINIO_ROOT_USER: 'sail'
            MINIO_ROOT_PASSWORD: 'password'
        volumes:
            - 'sailminio:/data/minio'
        networks:
            - sail
        command: minio server /data/minio --console-address ":8900"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sailredis:/data'
        networks:
            - sail
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            retries: 3
            timeout: 5s
    selenium:
        image: 'selenium/standalone-chrome'
        volumes:
            - '/dev/shm:/dev/shm'
        networks:
            - sail
    pgadmin:
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: '${PGADMIN_DEFAULT_EMAIL:-admin@app.com}'
            PGADMIN_DEFAULT_PASSWORD: '${PGADMIN_DEFAULT_PASSWORD:-admin}'
        ports:
            - "${PGADMIN_PORT:-8080}:80"
        volumes:
            - 'sailpgadmin:/var/lib/pgadmin'
        networks:
            - databasepgsql
    apm-server:
        image: 'docker.elastic.co/apm/apm-server:7.6.1'
        cap_add: [ "CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID" ]
        cap_drop: [ "ALL" ]
        ports:
            - '${ELASTIC_APM_SERVER:-8200}:8200'
        networks:
            - sail
        command: >
            apm-server -e
              -E apm-server.rum.enabled=true
              -E setup.template.settings.index.number_of_replicas=0
              -E apm-server.kibana.enabled=true
              -E strict.perms=false
              -E output.elasticsearch.hosts=["elasticsearch:9200"]
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0-56a61c29-SNAPSHOT
        ports:
            - '9200:9200'
        healthcheck:
            test: [ "CMD-SHELL", "curl -s http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=500ms" ]
            retries: 300
            interval: 1s
        environment:
            - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
            - "network.host="
            - "transport.host=127.0.0.1"
            - "http.host=0.0.0.0"
            - "cluster.routing.allocation.disk.threshold_enabled=false"
            - "discovery.type=single-node"
            - "xpack.security.authc.anonymous.roles=remote_monitoring_collector"
            - "xpack.security.authc.realms.file.file1.order=0"
            - "xpack.security.authc.realms.native.native1.order=1"
            - "xpack.security.enabled=true"
            - "xpack.license.self_generated.type=trial"
            - "xpack.security.authc.token.enabled=true"
            - "xpack.security.authc.api_key.enabled=true"
            - "logger.org.elasticsearch=${ES_LOG_LEVEL:-error}"
            - "action.destructive_requires_name=false"
        networks:
            - sail
networks:
    sail:
        driver: bridge
    databasepgsql:
        driver: bridge
volumes:
    sailpgsql:
        driver: local
    sailpgadmin:
        driver: local
    sailredis:
        driver: local
    sailminio:
        driver: local
    sailmeilisearch:
        driver: local
    elasticsearch-data:
        driver: local
